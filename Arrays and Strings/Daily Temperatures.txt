/** Solution to the problem found here: https://leetcode.com/problems/daily-temperatures/ 
*
* Given a list of daily temperatures T, return a list such that, for each day in the input, tells you how many days you would have to wait until a warmer temperature. 
* If there is no future day for which this is possible, put 0 instead.
* For example, given the list of temperatures T = [73, 74, 75, 71, 69, 72, 76, 73], your output should be [1, 1, 4, 2, 1, 1, 0, 0].
* Note: The length of temperatures will be in the range [1, 30000]. Each temperature will be an integer in the range [30, 100]. 
**/

class Solution {
public:
    vector<int> dailyTemperatures(vector<int>& T) {
        
        vector<int> distances;
        int amount = 0, base = 0;
        
          for(int tail = 1; tail < T.size(); ++tail){
            ++amount;

            if(T[tail] > T[base]){

                distances.push_back(amount);
                amount = 0;
                ++base;
                tail = base;
            }else{
                if(tail == T.size() - 1){

                    ++base;
                    tail = base;
                    amount = 0;
                    distances.push_back(amount);
                }

            }
               
        }
        
        distances.push_back(0);
                
        return distances;
    }
};